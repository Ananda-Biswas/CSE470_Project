{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\CSE470_Project\\\\project\\\\src\\\\components\\\\Player_registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player_registration() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    location: '',\n    password: ''\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/createplayer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Handle successful signup\n        console.log('Player signed up successfully');\n      } else {\n        // Handle signup error\n        console.error('Error signing up player');\n      }\n    } catch (error) {\n      console.error('Error signing up player', error);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"player_reg\",\n      className: \"tabcontent\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChang,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Player_registration, \"kikTWSl86LTst8YxGIp6qh0dfV0=\");\n_c = Player_registration;\nvar _c;\n$RefreshReg$(_c, \"Player_registration\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Player_registration","_s","formData","setFormData","username","email","location","password","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","handleChange","name","value","target","prevFormData","children","id","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","handleChang","_c","$RefreshReg$"],"sources":["C:/Users/anand/Documents/CSE470_Project/project/src/components/Player_registration.js"],"sourcesContent":["import React,{useState} from 'react';\r\n\r\nexport default function Player_registration() {\r\n    const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    location: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/createplayer', {\r\n        method: 'POST', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Handle successful signup\r\n        console.log('Player signed up successfully');\r\n      } else {\r\n        // Handle signup error\r\n        console.error('Error signing up player');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error signing up player', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <div id=\"player_reg\" className=\"tabcontent\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChang} required />\r\n\r\n                <input type=\"submit\" value=\"Log in\" />\r\n         \r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}